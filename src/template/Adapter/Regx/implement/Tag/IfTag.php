<?php

namespace iflow\template\Adapter\Regx\implement\Tag;

use iflow\template\Adapter\Regx\implement\Abstracts\TagAbstract;
use iflow\template\Adapter\Regx\Interfaces\TagInterface;

class IfTag extends TagAbstract {

    protected string $instructionCode = '';

    protected array $ifInstruction = [ 'if', 'elseif', 'else' ];

    public function parser(string $tag, string $html, array $args): TagInterface {
        parent::parser($tag, $html, $args); // TODO: Change the autogenerated stub

        $this->instructionCode = $this->attrs['instruction'] ?? '';
        $this->html = $this->toPhpScript($html, $args['tree'], $args['index']);

        return $this;
    }


    public function toPhpScript($html, array $tree, int $index) {

        if ($this->tag === 'else')
            return "<?php {$this -> tag}: ?>{$html}<?php endif; ?>";

        $next = $this->getNext($index, $tree);

        $endScript = '';
        if (empty($next) || !in_array($next['selfTag']['tag'], $this->ifInstruction))
            $endScript = "<?php endif; ?>";

        return sprintf("<?php %s(%s): ?> %s %s", $this->tag,
            $this->instructionCode, $html, $endScript);
    }
}