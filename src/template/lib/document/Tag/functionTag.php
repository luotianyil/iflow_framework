<?php


namespace iflow\template\lib\document\Tag;


use iflow\template\lib\config;
use iflow\template\lib\document\abstracts\tagAbstract;
use iflow\template\lib\document\Parser\DOMNodeParser;
use iflow\template\lib\document\Parser\ParserHtml;

class functionTag extends tagAbstract
{

    protected array $hiddenAttributes = [
        "action", "paramsname", "props", "tag"
    ];

    protected string|null $action = "";
    protected string|null $paramsName = "";

    public function parser(DOMNodeParser $node, config $config, ParserHtml $parserHtml): static
    {
        parent::parser($node, $config, $parserHtml); // TODO: Change the autogenerated stub
        $this->action = $this->node -> getAttributes('action');
        $this->paramsName = $this->node -> getAttributes('paramsName');

        $this->parserAttributes();
        return $this;
    }

    public function parserAttributes(): static
    {
        if (!$this->action) throw new \Exception("FunctionTag actionName for Empty");

        $props = $this -> props ? "...[{$this -> props}]" : "";

        $functionCode = "{$this->action}({$props})";

        if ($this->paramsName) {
            $this->html = "<?php \${$this -> paramsName} = $functionCode; ?>";
        } else {
            $this->html = "<?=$functionCode?>";
        }
        $this->html .= $this->traverseNodesToHtml();
        return $this;
    }
}