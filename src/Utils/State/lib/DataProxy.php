<?php


namespace iflow\Utils\State\lib;


use iflow\Utils\ArrayTools;

class DataProxy extends ArrayTools
{

    /**
     * stateX constructor.
     * @param array $getAction Get方法 闭包函数列表
     * @param array $setAction Set方法 闭包函数列表
     * @param array $callBackAction callBackAction 回调方法 闭包函数列表
     * @param array $items 数据集
     */
    public function __construct(
        protected array $getAction = [],
        protected array $setAction = [],
        protected array $callBackAction = [],
        protected array $items = [],
    ) {}

    /**
     * 设置数据拦截
     * @param string $offset
     * @param mixed $value
     * @return mixed
     */
    public function offsetSet($offset, mixed $value): mixed
    {
        $setType = parent::offsetSet($offset, $value); // TODO: Change the autogenerated stub
        // 变更数据 执行回调
        $this->callAction("{$offset}ChangeAfter", 'callBackAction', [
            $offset, $value
        ]);
        return $setType;
    }

    /**
     * 执行闭包基类
     * @param string $actionName
     * @param string $type
     * @param array $params 传递的参数
     * @return mixed
     */
    public function callAction(string $actionName, string $type = 'getAction', array $params = []): mixed
    {
        array_unshift($params, $this);
        if (isset($this->{$type}[$actionName])) return call_user_func($this->{$type}[$actionName], ...$params);
        return null;
    }

}